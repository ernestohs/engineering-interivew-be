version: '3.9'

services:
#  api:
#    image: task-api
#    build: 
#      context: .
#    restart: always
#    container_name: task_management_api
#    working_dir: /usr/src/app
#    volumes:
#      - .:/usr/src/app
#    environment:
#      NODE_ENV: ${NODE_ENV}
#      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}"
#      REDIS_URL: "redis://redis:6379"
#      VERSION: ${VERSION}
#    ports:
#      - "${API_PORT}:8080"
#    depends_on:
#      - database
#      - redis

  database:
    image: postgres:14-alpine
    container_name: task_management_db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./.config/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"  # Expose Postgres port
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready"]
#      interval: 1s
#      timeout: 5s
#      retries: 10

  # redis:
  #   image: redis:alpine
  #   container_name: task_management_redis
  #   ports:
  #     - "6379:6379"

  # nginx:
  #   image: nginx:alpine
  #   container_name: task_management_nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - api

volumes:
  db-data:
